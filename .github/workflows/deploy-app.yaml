name: .NET CI

env:
  registryName: ju2k3txicxdw4mpnpreg.azurecr.io
  repositoryName: rag/loadtestdemo
  dockerFolderPath: ./Application/src/RazorPagesTestSample
  tag: ${{github.run_number}}
  LOAD_TEST_RESOURCE: alt-workshop
  LOAD_TEST_RESOURCE_GROUP: ${{ secrets.AZURE_RG }}
on:
  push:
    branches: [main]
    paths: Application/**
  pull_request:
    branches: [main]
    paths: Application/**
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0

      - name: Restore dependencies
        run: dotnet restore ./Application/src/RazorPagesTestSample/RazorPagesTestSample.csproj
      - name: Build
        run: dotnet build --no-restore ./Application/src/RazorPagesTestSample/RazorPagesTestSample.csproj
      - name: Test
        run: dotnet test --no-build --verbosity normal ./Application/tests/RazorPagesTestSample.Tests/RazorPagesTestSample.Tests.csproj
      - uses: actions/github-script@v6
        if: failure()
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            let body = "${{ env.build_name }} Workflow Failure \n Build Number: ${{ github.run_number }} \n Build Log: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} \n SHA: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }}) \n";
            github.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: "${{ env.build_name }} Workflow ${{ github.run_number }} Failed! ",
              body: body
            });

  dockerBuildPush:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v3

      - name: Docker Login
        # You may pin to the exact commit or the version.
        # uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        uses: docker/login-action@v1.9.0
        with:
          # Server address of Docker registry. If not set then will default to Docker Hub
          registry: ${{ secrets.ACR_LOGIN_SERVER }}
          # Username used to log against the Docker registry
          username: ${{ secrets.ACR_USERNAME }}
          # Password or personal access token used to log against the Docker registry
          password: ${{ secrets.ACR_PASSWORD }}
          # Log out from the Docker registry at the end of a job
          logout: true

      - name: Docker Build
        run: docker build -t $registryName/$repositoryName:$tag --build-arg build_version=$tag $dockerFolderPath

      - name: Docker Push
        run: docker push $registryName/$repositoryName:$tag

  deploy-to-dev:
    runs-on: ubuntu-latest
    needs: dockerBuildPush
    environment:
      name: dev
      url: https://p5kae6yg4vg74-dev.azurewebsites.net/

    steps:
      - uses: actions/checkout@v3

      - name: "Login via Azure CLI"
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - uses: azure/webapps-deploy@v2
        with:
          app-name: "p5kae6yg4vg74-dev"
          images: p5kae6yg4vg74mpnpreg.azurecr.io/techboost/dotnetcoreapp:${{github.run_number}}

      - name: "Azure Load Testing"
        uses: azure/load-testing@v1
        with:
          loadTestConfigFile: "LoadTestConfig.yaml"
          loadTestResource: ${{ env.LOAD_TEST_RESOURCE }}
          resourceGroup: ${{ env.LOAD_TEST_RESOURCE_GROUP }}
          env: |
            [
              {
              "name": "WEBAPP_DOMAIN",
              "value": "p5kae6yg4vg74-dev.azurewebsites.net"
              }
            ]

      - uses: JasonEtco/create-an-issue@v2.9.1
        if: ${{ failure() }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          USER: ${{ github.actor }}
        with:
          filename: .github/ISSUE_TEMPLATE/load_test_report.md

      - uses: actions/upload-artifact@v2
        with:
          name: loadTestResults
          path: ${{ github.workspace }}/loadTest

  deploy-to-test:
    runs-on: ubuntu-latest
    needs: deploy-to-dev
    environment:
      name: test
      url: https://p5kae6yg4vg74-test.azurewebsites.net/

    steps:
      - uses: actions/checkout@v3

      - name: "Login via Azure CLI"
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - uses: azure/webapps-deploy@v2
        with:
          app-name: "p5kae6yg4vg74-test"
          images: p5kae6yg4vg74mpnpreg.azurecr.io/techboost/dotnetcoreapp:${{github.run_number}}

  deploy-to-prod:
    runs-on: ubuntu-latest
    needs: deploy-to-test
    environment:
      name: prod
      url: https://p5kae6yg4vg74-prod.azurewebsites.net/

    steps:
      - uses: actions/checkout@v3

      - name: "Login via Azure CLI"
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - uses: azure/webapps-deploy@v2
        with:
          app-name: "p5kae6yg4vg74-prod"
          images: p5kae6yg4vg74mpnpreg.azurecr.io/techboost/dotnetcoreapp:${{github.run_number}}
